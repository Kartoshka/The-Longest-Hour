using UnityEngine;
using UnityEngine.Networking;
using System.Collections;

public class NetworkedMoverComponent : NetworkBehaviour
{
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Datatypes
	//////////////////////////////////////////////////////////////////////////////////////////


	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region GameObjects
	//////////////////////////////////////////////////////////////////////////////////////////

	public MoverComponent m_moverComponent;

	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Constructors
	//////////////////////////////////////////////////////////////////////////////////////////

	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Attributes
	//////////////////////////////////////////////////////////////////////////////////////////

	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Accessors
	//////////////////////////////////////////////////////////////////////////////////////////

	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Methods
	//////////////////////////////////////////////////////////////////////////////////////////  

	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Network
	//////////////////////////////////////////////////////////////////////////////////////////  

	//[Command]
	//private void CmdUpdateMover(int value)
	//{
	//	setRollValue(value);
	//	RpcRollDiceAction(value);
	//}

	//[ClientRpc]
	//private void RpcRollDiceAction(int value)
	//{
	//	setRollValue(value);
	//}

	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Runtime
	//////////////////////////////////////////////////////////////////////////////////////////  

	// Use this for initialization
	void Start()
	{
		//if (!Network.peerType.Equals(NetworkPeerType.Disconnected))
		//{
			if (m_moverComponent)
			{
				m_moverComponent.enabled = false;
            }
		//}
		//else
		//{
		//	this.enabled = false;
		//}
	}

	// Update is called once per frame
	void Update()
	{
//		ProcessInputs();

		if (localPlayerAuthority)//(isLocalPlayer)
        {
			if (m_moverComponent)
			{
				m_moverComponent.update();
			}
		}
	}

	//private void ProcessInputs()
	//{

	//}

	#endregion
	//////////////////////////////////////////////////////////////////////////////////////////
	#region Persistence
	//////////////////////////////////////////////////////////////////////////////////////////

	#endregion
}
